// @generated by protoc-gen-validate-zod-test v0.0.1-dev with parameter "target=ts,cases=packages/protoc-gen-validate-zod/tests/cases.txt"
// @generated from file tests/harness/cases/bool.proto (package tests.harness.cases, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {expect, it} from "vitest";
import {BoolConstFalse, BoolConstTrue, BoolNone} from "./bool_pb.js";
import {BoolConstFalseSchema, BoolConstTrueSchema, BoolNoneSchema} from "./bool_zod.js";

it("bool - none - valid", () => {
  const message = BoolNone.fromJson({"val":true});
  expect(message).toBeValid(BoolNoneSchema);
});

it("bool - const (true) - valid", () => {
  const message = BoolConstTrue.fromJson({"val":true});
  expect(message).toBeValid(BoolConstTrueSchema);
});

it("bool - const (true) - invalid", () => {
  const message = BoolConstTrue.fromJson({});
  expect(message).toBeInvalid(BoolConstTrueSchema, 1);
});

it("bool - const (false) - valid", () => {
  const message = BoolConstFalse.fromJson({});
  expect(message).toBeValid(BoolConstFalseSchema);
});

it("bool - const (false) - invalid", () => {
  const message = BoolConstFalse.fromJson({"val":true});
  expect(message).toBeInvalid(BoolConstFalseSchema, 1);
});
